/* TODO: //////////////////////////////////////////

-- member/static initialization 
-- super method call

-- refactor throw error to function from macros
-- undef THROW_ANLAYZER_ERROR, TOKENIZER_ERROR, ... (not THROW_BUG)
-- "string %s literal"_s % {"replace"}
-- ext_lib.lib.lib;

-- class A{} var a = A; println(a.get_type_name()); // RuntimeInstance

-- a rich typecheck api
-- "".substr() check index limit
-- float("") <-- crash
-- _self_ptr in runtime instance fix

----- TODO ADDNL -----

-- reverse list, string, slice array
-- " ".join(arr), strip, trim... try dir("") in python and implement all.
-- python like range().
-- dir() function
-- in, is 

-- func f(x) = 2*x + 1; lambda
-- [expr(i) for i in expr]
-- a, b = b, a
-- map(f, arr) -> arr // can implement in carbon too.
-- implement __repr__() // print array of string / or add "" manually in arr/dict
-- trinary if else
-- return a, b, c // maybe
//////////////////////////////////////////////////// */

//import lib = "test_lib.cb";

func f(x) = x + 2;

func main(args) {
	println("done main");
}
